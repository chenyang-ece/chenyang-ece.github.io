---
layout:     post
title:      HTML5 总结「2」
subtitle:   
date:       2021-02-05
author:     Chen 
header-img: img/facebook.jpg
catalog: true
tags:
    - Study
	- HTML5
---

#### 1.Input 类型

email 类型用于应该包含 e-mail 地址的输入域。

在提交表单时，会自动验证 email 域的值。

```html
实例
E-mail: <input type="email" name="user_email" />
```

url 类型用于应该包含 URL 地址的输入域。

在提交表单时，会自动验证 url 域的值。

```html
实例
Homepage: <input type="url" name="user_url" />
```

number 类型用于应该包含数值的输入域。

您还能够设定对所接受的数字的限定：

```html
实例
Points: <input type="number" name="points" min="1" max="10" />
```

提示：规定合法的数字间隔（如果 step=”3”，则合法的数是 -3,0,3,6 等）

range 类型用于应该包含一定范围内数字值的输入域。

range 类型显示为滑动条。

您还能够设定对所接受的数字的限定：

```html
实例
<input type="range" name="points" min="1" max="10" />
```

##### 2. Date Pickers（日期选择器）

HTML5 拥有多个可供选取日期和时间的新输入类型：

date - 选取日、月、年
month - 选取月、年
week - 选取周和年
time - 选取时间（小时和分钟）
datetime - 选取时间、日、月、年（UTC 时间）
datetime-local - 选取时间、日、月、年（本地时间）
下面的例子允许您从日历中选取一个日期：

```html
实例
Date: <input type="date" name="user_date" />
```

#### 3.Input 类型 - search

search 类型用于搜索域，比如站点搜索或 Google 搜索。

search 域显示为常规的文本域。

#### 4.HTML5 的新的表单元素：

datalist 元素
datalist 元素规定输入域的选项列表。

列表是通过 datalist 内的 option 元素创建的。

如需把 datalist 绑定到输入域，请用输入域的 list 属性引用 datalist 的 id：

```html
实例
Webpage: <input type="url" list="url_list" name="link" />
<datalist id="url_list">
<option label="W3School" value="http://www.W3School.com.cn" />
<option label="Google" value="http://www.google.com" />
<option label="Microsoft" value="http://www.microsoft.com" />
</datalist>
```

output 元素用于不同类型的输出，比如计算或脚本输出：

```html
实例
<output id="result" onforminput="resCalc()"></output>
```

#### 5.新的 form 属性：

```html
新的 input 属性：autocomplete      autofocus      form
form overrides (formaction, formenctype, formmethod, formnovalidate, formtarget)
height 和 width
list
min, max 和 step
multiple
pattern (regexp)
placeholder
required
autocomplete 属性
autocomplete 属性规定 form 或 input 域应该拥有自动完成功能。
注释：autocomplete 适用于 <form> 标签，以及以下类型的 <input> 标签：
text, search, url, telephone, email, password, datepickers, range 以及 color。
```

当用户在自动完成域中开始输入时，浏览器应该在该域中显示填写的选项：

```html
autofocus 属性
autofocus 属性规定在页面加载时，域自动地获得焦点。
实例
User name: <input type="text" name="user_name"  autofocus="autofocus" />
```

#### 6.表单重写属性

表单重写属性（form override attributes）允许您重写 form 元素的某些属性设定。

表单重写属性有：

```html
formaction - 重写表单的 action 属性
formenctype - 重写表单的 enctype 属性
formmethod - 重写表单的 method 属性
formnovalidate - 重写表单的 novalidate 属性
formtarget - 重写表单的 target 属性
注释：表单重写属性适用于以下类型的 <input> 标签：submit 和 image。
```

#### 7.multiple 属性

multiple 属性规定输入域中可选择多个值。

```html
注释：multiple 属性适用于以下类型的 <input> 标签：email 和 file。
实例
Select images: <input type="file" name="img" multiple="multiple" />
```

#### 8.novalidate 属性

novalidate 属性规定在提交表单时不应该验证 form 或 input 域。

```html
注释：novalidate 属性适用于 <form> 以及以下类型的 
<input> 标签：text, search, url, telephone, email, 
password, date pickers, range 以及 color.
```

#### 9.pattern 属性

pattern 属性规定用于验证 input 域的模式（pattern）。

模式（pattern） 是正则表达式。您可以在我们的 JavaScript 教程中学习到有关正则表达式的内容。

```html
注释：pattern 属性适用于以下类型的 <input> 标签：text, search,
url, telephone, email 以及 password。
```

下面的例子显示了一个只能包含三个字母的文本域（不含数字及特殊字符）：

```html
实例
Country code: <input type="text" name="country_code"
pattern="[A-z]{3}" title="Three letter country code" />
```

#### 10.placeholder 属性

placeholder 属性提供一种提示（hint），描述输入域所期待的值。

```html
注释：placeholder 属性适用于以下类型的 <input> 标签：text,
search, url, telephone, email 以及 password。
```

提示（hint）会在输入域为空时显示出现，会在输入域获得焦点时消失：

```html
实例
<input type="search" name="user_search"  placeholder="Search W3School" />
```

#### 11.required 属性

required 属性规定必须在提交之前填写输入域（不能为空）。

```html
注释：required 属性适用于以下类型的 <input> 标签：text, search, url,
telephone, email, password, date pickers, number, checkbox, radio 以及 file。
实例
Name: <input type="text" name="usr_name" required="required" />
```